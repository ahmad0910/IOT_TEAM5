{"version":"V2.0","versionNumber":"V2.3.6","type":"stickc-plus2","components":[{"name":"screen","type":"screen","layer":0,"screenId":"builtin","screenName":"","id":"__stickc-plus2_screen","createTime":1758113960535,"x":0,"y":0,"width":135,"height":240,"backgroundColor":"#000000","size":0,"isSelected":true},{"name":"title0","type":"title","layer":1,"screenId":"builtin","screenName":"","id":"lK56V`5wcTm`zEQ0","createTime":1758114155777,"x":0,"y":0,"color":"#ffffff","backgroundColor":"#0000FF","text":"Title","textOffset":3,"font":"Widgets.FONTS.DejaVu18","isSelected":false},{"name":"label0","type":"label","layer":2,"screenId":"builtin","screenName":"","id":"rt*A^h6!4Ff$MXM&","createTime":1758114156954,"x":56,"y":52,"color":"#ffffff","backgroundColor":"#222222","text":"label0","font":"Widgets.FONTS.DejaVu40","rotation":0,"isSelected":false}],"resources":[{"hardware":["hardware_button","hardware_pin_button","imu","speaker","ir","i2c"]},{"unit":["unit_rfid"]},{"custom":["custom_firebase"]}],"units":[{"type":"unit_rfid","name":"rfid_0","portList":["A","PAHUB","Custom"],"portType":"A","userPort":[22,21],"id":"t@PFf47qGy7Hn-DA","createTime":1758461082237,"bus":"i2c0","pahubPortList":[0,1,2,3,4,5],"pahubPort":0,"initBlockId":"*Laa0W1;kUoqswNrxQT:"}],"hats":[],"caps":[],"bases":[],"i2cs":[{"id":"i2c0","portType":"A","userPort":[22,21],"freq":"100000","blockId":"i^tL5T#-odI3C3PEJRFu"}],"blockly":"<block type=\"basic_on_setup\" id=\"setup_block\" deletable=\"false\" x=\"-70\" y=\"-190\"><mutation isBegin=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_begin\" id=\"zcsvkum,-o|UMuXPj:eg\"><next><block type=\"i2c_init\" id=\"i^tL5T#-odI3C3PEJRFu\"><field name=\"NAME\">0</field><field name=\"FREQ\">100000</field><value name=\"SCL\"><shadow type=\"math_number\" id=\";;}:3_dy@:Xxh7Z[4fr6\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">33</field></shadow></value><value name=\"SDA\"><shadow type=\"math_number\" id=\"!apTIS4;vEP((q^G:+Z[\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">32</field></shadow></value><next><block type=\"wlan_sta_init\" id=\"LFN7fpd%l|x1Sjscrk!f\"><next><block type=\"wlan_sta_set_active\" id=\"qG-Wyy8]v`.hUz_Pn=S7\"><field name=\"ACTIVE\">True</field><next><block type=\"wlan_sta_connect\" id=\"3wubii(sZI5}[T0{4y8!\"><value name=\"SSID\"><shadow type=\"text\" id=\"C#pT,}xM]ihd6m$AB{),\"><field name=\"TEXT\">yousef</field></shadow></value><value name=\"PASSWORD\"><shadow type=\"text_password\" id=\"C7G9?d,0v?Fv4xQ,2mKp\"><mutation show=\"true\"></mutation><field name=\"TEXT\">0549109995</field></shadow></value><next><block type=\"controls_whileUntil\" id=\"NA]uWLk[T|g$]-L$``6R\"><field name=\"MODE\">UNTIL</field><value name=\"BOOL\"><block type=\"wlan_sta_is_connected\" id=\"K+!]f,piXy1xWf[;rSU@\"></block></value><statement name=\"DO\"><block type=\"time_sleep_second\" id=\"P,E`]5|SNdpCD+cCi=P8\"><value name=\"SECOND\"><shadow type=\"math_number\" id=\"M.pOk#3lG9W?I!=*]Nn+\"><mutation max=\"Infinity\" min=\"0\" precision=\"0\"></mutation><field name=\"NUM\">0.5</field></shadow></value></block></statement><next><block type=\"unit_rfid_init\" id=\"*Laa0W1;kUoqswNrxQT:\"><field name=\"NAME\">rfid_0</field><next><block type=\"title_set_text\" id=\"ctzX!tp!cf2rwHYX[h@?\"><field name=\"NAME\">title0</field><value name=\"TEXT\"><shadow type=\"text\" id=\"}_KoS5c}[-j1*b{QEQvM\"><field name=\"TEXT\">RFID TEST</field></shadow></value><next><block type=\"label_set_size\" id=\"y{YE_?Z9EQC:FF/QaOJA\"><field name=\"NAME\">label0</field><value name=\"SIZE\"><shadow type=\"math_number\" id=\"aypy`AW8LBt7RI7l0Iry\"><mutation max=\"Infinity\" min=\"-Infinity\" precision=\"0\"></mutation><field name=\"NUM\">1</field></shadow></value><next><block type=\"speaker_set_volume_percentage\" id=\"=4ssV6Yl!pkVc+r-TP5b\"><value name=\"VOLUME\"><shadow type=\"math_slider\" id=\"g=un8eeDyvb5azcY+CsS\"><mutation max=\"100\" min=\"0\" step=\"1\" precision=\"1\"></mutation><field name=\"NUM\">100</field></shadow></value><next><block type=\"custom_firebase_init\" id=\"Ebn^*n/v1,{+9s}=h`[0\"><field name=\"NAME\">firebase_0</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"basic_on_loop\" id=\"loop_block\" deletable=\"false\" x=\"-70\" y=\"310\"><mutation isUpdate=\"true\"></mutation><field name=\"UPDATEOP\">true</field><statement name=\"FUNC\"><block type=\"system_m5_update\" id=\"w14=RUWZ4@-,_7xCIZV_\"><next><block type=\"controls_ifelse\" id=\"iKZr|WN:BoU,T_oj-_G`\"><value name=\"IF0\"><block type=\"unit_rfid_is_new_card_present\" id=\".jN,*W**fS}xdHOEhAxC\"><field name=\"NAME\">rfid_0</field></block></value><statement name=\"DO0\"><block type=\"speaker_tone\" id=\"%R].WVzdFP~zvA#-b)`K\"><value name=\"FREQ\"><shadow type=\"math_number\" id=\"vhB5^Ppm-9%.y*iIFR9[\"><mutation max=\"Infinity\" min=\"0\" precision=\"0\"></mutation><field name=\"NUM\">1500</field></shadow></value><value name=\"MS\"><shadow type=\"math_number\" id=\"y9JT]?t;JGIQ~?(No6}-\"><mutation max=\"Infinity\" min=\"0\" precision=\"0\"></mutation><field name=\"NUM\">100</field></shadow></value><next><block type=\"label_set_text\" id=\"JLCh18(PP1iI=j]0UW$0\"><field name=\"NAME\">label0</field><value name=\"TEXT\"><shadow type=\"text\" id=\"]g9)zoK%ya^R3isxwJpC\"><field name=\"TEXT\">RFID TAG</field></shadow></value><next><block type=\"custom_firebase_write\" id=\"cv^][a/p=L@TeqMhvaEx\"><field name=\"NAME\">firebase_0</field><value name=\"host\"><shadow type=\"text\" id=\"9}]f+PN2O}=@m7+JZ4E2\"><field name=\"TEXT\">https://iot5-67324-default-rtdb.firebaseio.com/</field></shadow></value><value name=\"path\"><shadow type=\"text\" id=\"iY0ItlHM#(Kt:Z`Oy/$7\"><field name=\"TEXT\">tags.json</field></shadow></value><value name=\"auth\"><shadow type=\"text\" id=\"6%8k2l#_edK@Y9BRFOxV\"><field name=\"TEXT\">AIzaSyB7HouRf_sozv3xKp4b7P2xr0TEuoDdPl0</field></shadow></value><value name=\"data\"><shadow type=\"text\" id=\"VMe`)X@-m!$(uD}iuRJS\"><field name=\"TEXT\"></field></shadow><block type=\"text_convert_str\" id=\"IPyd__v|i-s=eo6-/atI\"><value name=\"VALUE\"><block type=\"unit_rfid_read_card_uid\" id=\"^_;8b`(lb20TqabT.|Rr\"><field name=\"NAME\">rfid_0</field></block></value></block></value></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"label_set_text\" id=\"Cbp,/eJFR@^.p]88(G8F\"><field name=\"NAME\">label0</field><value name=\"TEXT\"><shadow type=\"text\" id=\"#QK0/O9APy?RAdcK=TAz\"><field name=\"TEXT\">NO RFID</field></shadow></value></block></statement></block></next></block></statement></block>","screen":[{"simulationName":"Built-in","type":"builtin","width":135,"height":240,"scale":0.67,"screenName":"","blockId":"","screenColorType":0,"rotation":3,"id":"builtin","createTime":1758113960534}],"logicWhenNum":0,"customList":[{"id":"custom_firebase","name":"Firebase","color":"#d20f0f","blockly":"const CUSTOM_FIREBASE_LANGUAGES = {\n  \"CUSTOM_FIREBASE_INIT\": {\n    \"en\": \"%1 init\"\n  },\n  \"CUSTOM_FIREBASE_READ\": {\n    \"en\": \"read %1 host %2 path %3 auth %4\"\n  },\n  \"CUSTOM_FIREBASE_WRITE\": {\n    \"en\": \"write %1 host %2 path %3 auth %4 data %5\"\n  }\n};\n\nconst initType = 'custom_firebase_init';\nBlockly.BlockRegExpList['custom_firebase'] = {\n  regexp: new RegExp(/^custom_firebase_/),\n  code: \"from Firebase import Firebase\",\n  initBlockType: initType,\n  categoryId: 'custom_firebase',\n}\nBlockly.utils.registerLanguages(CUSTOM_FIREBASE_LANGUAGES)\n\nBlockly.Msg.CUSTOM_FIREBASE_HUE = '#d20f0f'\nBlockly.Msg.CUSTOM_FIREBASE = 'Firebase'\n\nBlockly.utils.getcustom_firebaseOptions = function() {\n  let options = [];\n  let list = Blockly.utils.getCustomNameList(initType);\n  for (let i = 0; i < list.length; i++) {\n    let value = list[i];\n    options.push([String(value), String(value)]);\n  }\n  if (options.length === 0) return [\n    ['firebase_0', 'firebase_0']\n  ];\n  return options;\n}\n\n\nBlockly.Blocks[\"custom_firebase_init\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_FIREBASE_INIT,\n      'args0': [\n        // { 'type': 'field_dropdown', 'name': 'NAME', 'options': Blockly.utils.getcustom_firebaseOptions },\n        {\n          'type': 'field_input',\n          'name': 'NAME',\n          'text': 'firebase_0'\n        },\n\n      ],\n      'previousStatement': null,\n      'nextStatement': null,\n      'inputsInline': true,\n      'colour': \"#d20f0f\",\n      \"tool\": []\n    };\n  }\n}\n\nBlockly.Python[\"custom_firebase_init\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n\n  return `${varname} = Firebase()\\n`\n}\n\nBlockly.Blocks[\"custom_firebase_read\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_FIREBASE_READ,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_firebaseOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'host'\n        }, {\n          'type': 'input_value',\n          'name': 'path'\n        }, {\n          'type': 'input_value',\n          'name': 'auth'\n        },\n      ],\n      'output': null,\n      'inputsInline': true,\n      'colour': \"#d20f0f\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_firebase_read\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var host = Blockly.Python.valueToCode(block, 'host', Blockly.Python.ORDER_FUNCTION_CALL);\n  var path = Blockly.Python.valueToCode(block, 'path', Blockly.Python.ORDER_FUNCTION_CALL);\n  var auth = Blockly.Python.valueToCode(block, 'auth', Blockly.Python.ORDER_FUNCTION_CALL);\n  return [`${varname}.read(${host}, ${path}, ${auth})`, Blockly.Python.ORDER_NONE]\n}\n\nBlockly.Blocks[\"custom_firebase_write\"] = {\n  init: function() {\n    this.jsonInit(this._init());\n  },\n  _init: function() {\n    return {\n      'message0': Blockly.Msg.CUSTOM_FIREBASE_WRITE,\n      'args0': [{\n          'type': 'field_dropdown',\n          'name': 'NAME',\n          'options': Blockly.utils.getcustom_firebaseOptions\n        },\n        {\n          'type': 'input_value',\n          'name': 'host'\n        }, {\n          'type': 'input_value',\n          'name': 'path'\n        }, {\n          'type': 'input_value',\n          'name': 'auth'\n        }, {\n          'type': 'input_value',\n          'name': 'data'\n        },\n      ],\n      'previousStatement': null,\n      'nextStatement': null,\n      'inputsInline': true,\n      'colour': \"#d20f0f\",\n    };\n  }\n}\n\nBlockly.Python[\"custom_firebase_write\"] = function(block) {\n  var varname = block.getFieldValue('NAME') || '_';\n  var host = Blockly.Python.valueToCode(block, 'host', Blockly.Python.ORDER_FUNCTION_CALL);\n  var path = Blockly.Python.valueToCode(block, 'path', Blockly.Python.ORDER_FUNCTION_CALL);\n  var auth = Blockly.Python.valueToCode(block, 'auth', Blockly.Python.ORDER_FUNCTION_CALL);\n  var data = Blockly.Python.valueToCode(block, 'data', Blockly.Python.ORDER_FUNCTION_CALL);\n  return `${varname}.write(${host}, ${path}, ${auth}, ${data})\\n`\n}","toolbox":"\n<category name=\"Firebase\" colour=\"#d20f0f\" hidden=\"true\" toolboxitemid=\"custom_firebase\">\n<title text=\"Firebase\" docsLink=\"https://github.com/m5stack\"></title>\n<block type=\"custom_firebase_init\"/><block type=\"custom_firebase_read\">\n  <value name=\"host\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"path\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"auth\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block><block type=\"custom_firebase_write\">\n  <value name=\"host\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"path\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"auth\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n  <value name=\"data\">\n    <shadow type=\"text\">\n      <field name=\"TEXT\"/>\n    </shadow>\n  </value>\n</block>\n</category>\n","pyCode":"\n\"\"\"\nfile     Firebase\ntime     2025-09-21\nauthor   \nemail   \nlicense  MIT License\n\"\"\"\n\nimport requests\nimport json\n\nclass Firebase:\n    \"\"\"\n    note:\n        en: ''\n    details:\n        color: '#d20f0f'\n        link: https://github.com/m5stack\n        image: ''\n        category: Custom\n    example: ''\n    \"\"\"\n\n\n\n\n    def __init__(self):\n        \"\"\"\n        label:\n            en: '%1 init'\n        \"\"\"\n        pass\n\n    def read(self, host: str, path: str, auth: str):\n        \"\"\"\n        label:\n            en: read %1 host %2 path %3 auth %4\n        params:\n            host:\n                name: host\n                type: str\n            path:\n                name: path\n                type: str\n            auth:\n                name: auth\n                type: str\n        return:\n            type: any\n        \"\"\"\n        url = \"{}{}?auth={}\".format(host, path, auth)\n        resp = requests.get(url)\n        data = resp.json()\n        print(\"GET:\", data)\n        resp.close()\n        return data\n\n    def write(self, host: str, path: str, auth: str, data):\n        \"\"\"\n        label:\n            en: write %1 host %2 path %3 auth %4 data %5\n        params:\n            host:\n                name: host\n                type: str\n            path:\n                name: path\n                type: str\n            auth:\n                name: auth\n                type: str\n            data:\n                name: data\n        return:\n            type: str\n        \"\"\"\n        url = \"{}{}?auth={}\".format(host, path, auth)\n        resp = requests.post(url, data=json.dumps(data))\n        text = resp.text\n        print(\"POST:\", text)\n        resp.close()\n        return text\n\n\n"}]}